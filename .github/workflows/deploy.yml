name: Deploy to EC2

on:
  push:
    branches: [ "main" ]
  # 也可以用下面这行做手动触发
  # workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1 拉取仓库代码
      - name: Check out code
        uses: actions/checkout@v3

      # 2) 设置 Node.js 版本
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 3) 安装依赖 (可选：如果你希望在CI里做检查/测试)
      - name: Install dependencies
        run: npm install

      # 4) （可选）如果你有 build 脚本，可加上 --if-present 避免错误
      # - name: Build (if present)
      #   run: npm run build --if-present

      # 5) 添加SSH Key（假设EC2_KEY是base64编码的私钥）
      - name: Add SSH key
        run: |
          echo "$EC2_KEY" | base64 -d > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
        env:
          EC2_KEY: ${{ secrets.EC2_KEY }}

      # 6 SSH到EC2，拉取最新代码 & 重启进程
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            # 进入项目目录（假设在 /home/ec2-user/myapp）
            cd /home/ec2-user/myapp

            # 拉取最新代码
            git pull origin main

            # 安装依赖（生产环境）
            npm install --production

            # 如果首次部署，还需要 pm2 start；如果已经存在 pm2 进程，可以 pm2 reload/restart
            # 下面示例：如果已有 pm2 进程，就 reload，否则 start

            # 主应用 (app.js)
            pm2 describe my-app > /dev/null
            if [ $? -eq 0 ]; then
              echo "Reloading my-app..."
              pm2 reload my-app
            else
              echo "Starting my-app..."
              pm2 start app.js --name my-app
            fi

            # 邮件监听 (emailListener.js)
            pm2 describe email-listener > /dev/null
            if [ $? -eq 0 ]; then
              echo "Reloading email-listener..."
              pm2 reload email-listener
            else
              echo "Starting email-listener..."
              pm2 start emailListener.js --name email-listener
            fi

            # 查看 PM2 列表（可选）
            pm2 list

            exit
          EOF
